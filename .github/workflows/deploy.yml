name: Deploy Next.js to Lambda + S3 + CloudFront

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Node.js 설정
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      # 3. npm 및 빌드 캐시 설정
      - name: Cache node_modules and .next
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-next-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-next-

      # 4. 의존성 설치
      - name: Install dependencies (with optional)
        run: npm install --include=optional

      # 5. lightningcss 네이티브 바이너리 재설치
      # - name: Rebuild lightningcss native binary
      #   run: npm rebuild lightningcss

      # 6. Next.js Standalone 빌드 및 자산 복사
      - name: Build Next.js (standalone mode)
        run: |
          npm run build
          mkdir -p output
          cp -r .next/ output/.next
          cp -r node_modules output/node_modules
          cp -r public output/public

          echo "📦 Checking for static assets..."
          if [ -d .next/static ]; then
            echo "✅ Found .next/static"
            mkdir -p output/.next
            cp -r .next/static output/.next/
            ls -R output/.next/static
          else
            echo "⚠️ .next/static not found"
          fi

          cp -r public output/public/

      # 7. Lambda용 zip 압축
      - name: Zip Lambda package
        run: |
          cd output
          zip -r ../lambda.zip .

      # 8. AWS 자격 증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 9. 정적 자산 S3 업로드
      - name: Upload static assets to S3
        run: |
          aws s3 sync output/public ${{ secrets.S3_STORAGE_ADDRESS }}/public --delete

          if [ -d "output/.next/static" ]; then
            echo "✅ Uploading _next/static to S3"
            aws s3 sync output/.next/static ${{ secrets.S3_STORAGE_ADDRESS }}/_next/static --delete
          else
            echo "⚠️ Skipping _next/static upload — directory not found"
          fi

      # 10. Lambda 함수 업데이트
      - name: Update Lambda function
        run: |
          aws lambda update-function-configuration \
            --function-name nextJs \
            --handler index.handler \
            --runtime nodejs20.x

          aws lambda update-function-code \
            --function-name nextJs \
            --zip-file fileb://lambda.zip

      # 11. (선택) CloudFront 캐시 무효화
      - name: Invalidate CloudFront cache
        run: |
          if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "/*"
          else
            echo "CLOUDFRONT_DISTRIBUTION_ID secret not set, skipping invalidation."
          fi
