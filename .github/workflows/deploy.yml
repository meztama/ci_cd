name: Deploy Next.js to Lambda + S3 + CloudFront (with Layer)

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build and prepare Lambda files
        run: |
          npm run build

          mkdir -p lambda
          cp -r .next/standalone/* lambda/
          mkdir -p lambda/.next
          cp required-server-files.json lambda/.next/required-server-files.json

          if [ -d ".next/static" ]; then
            cp -r .next/static lambda/.next/static
          fi

          cp index.js lambda/index.js

      - name: Zip Lambda package
        run: |
          cd lambda
          zip -r ../lambda.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload Lambda zip to S3
        run: |
          aws s3 cp lambda.zip s3://${{ secrets.S3_LAMBDA_ADDRESS }}/lambda/lambda.zip

      - name: Update Lambda function (with Layer)
        run: |
          aws lambda update-function-code \
            --function-name nextJs \
            --s3-bucket ${{ secrets.S3_LAMBDA_ADDRESS }} \
            --s3-key lambda/lambda.zip

          aws lambda update-function-configuration \
            --function-name nextJs \
            --layers ${{ secrets.LAMBDA_LAYER_ARN }}

      - name: Upload static assets to S3
        run: |
          aws s3 sync public ${{ secrets.S3_STORAGE_ADDRESS }}/public --delete

          if [ -d ".next/static" ]; then
            aws s3 sync .next/static ${{ secrets.S3_STORAGE_ADDRESS }}/_next/static --delete
          fi

      - name: Invalidate CloudFront cache
        run: |
          if [ -n "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
              --paths "/*"
          fi
